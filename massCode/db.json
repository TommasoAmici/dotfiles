{
  "folders": [
    {
      "id": "FWpZsdhg",
      "name": "Default",
      "defaultLanguage": "typescript",
      "parentId": null,
      "isOpen": false,
      "isSystem": false,
      "createdAt": 1659601548436,
      "updatedAt": 1659601548436,
      "index": 0
    },
    {
      "name": "Python",
      "parentId": null,
      "isOpen": false,
      "isSystem": false,
      "defaultLanguage": "python",
      "id": "zBxaLtiq",
      "createdAt": 1659602078382,
      "updatedAt": 1659602092165,
      "index": 1
    },
    {
      "name": "React",
      "parentId": null,
      "isOpen": false,
      "isSystem": false,
      "defaultLanguage": "typescript",
      "id": "umEEv1YC",
      "createdAt": 1659602095347,
      "updatedAt": 1659602102821,
      "index": 2
    },
    {
      "name": "Go",
      "parentId": null,
      "isOpen": false,
      "isSystem": false,
      "defaultLanguage": "golang",
      "id": "zx86Kd_F",
      "createdAt": 1659602111639,
      "updatedAt": 1659602121556,
      "index": 3
    },
    {
      "name": "CSS",
      "parentId": null,
      "isOpen": false,
      "isSystem": false,
      "defaultLanguage": "css",
      "id": "ZwYF6OPe",
      "createdAt": 1659957234638,
      "updatedAt": 1659957252233,
      "index": 4
    },
    {
      "name": "TypeScript",
      "parentId": null,
      "isOpen": false,
      "isSystem": false,
      "defaultLanguage": "typescript",
      "id": "mkuuYv1u",
      "createdAt": 1660310399276,
      "updatedAt": 1660310417459
    },
    {
      "name": "Shell",
      "parentId": null,
      "isOpen": false,
      "isSystem": false,
      "defaultLanguage": "sh",
      "id": "QtIEu6Sp",
      "createdAt": 1660311005556,
      "updatedAt": 1660508065651
    }
  ],
  "snippets": [
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "zBxaLtiq",
      "tagsIds": [],
      "description": null,
      "name": "sort list of tuples",
      "content": [
        {
          "label": "Fragment 1",
          "language": "python",
          "value": "data.sort(key=lambda x: x[0])"
        }
      ],
      "id": "l1_w_X4z",
      "createdAt": 1659601652740,
      "updatedAt": 1659602086944
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "zBxaLtiq",
      "tagsIds": [],
      "description": null,
      "name": "sort list of dictionaries",
      "content": [
        {
          "label": "Fragment 1",
          "language": "python",
          "value": "data.sort(key=lambda x: x[\"key\"])"
        }
      ],
      "id": "zw4_ECO4",
      "createdAt": 1659601741033,
      "updatedAt": 1659602086937
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "zBxaLtiq",
      "tagsIds": [],
      "description": null,
      "name": "group by month",
      "content": [
        {
          "label": "Fragment 1",
          "language": "python",
          "value": "import itertools\n\ngrouped_by_month = itertools.groupby(\n  data, key=lambda x: x[\"created_at\"].strftime(\"%Y-%m\")\n)"
        }
      ],
      "id": "SlIV1i8Y",
      "createdAt": 1659601795714,
      "updatedAt": 1659602086952
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "umEEv1YC",
      "tagsIds": [],
      "description": null,
      "name": "Button forwardRef",
      "content": [
        {
          "label": "Fragment 1",
          "language": "typescript",
          "value": "import classNames from \"classnames\";\nimport { forwardRef } from \"react\";\n\ntype ButtonProps = JSX.IntrinsicAttributes &\n  React.ClassAttributes<HTMLButtonElement> &\n  React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>((props, ref) => {\n  return (\n    <button\n      ref={ref}\n      {...props}\n      className={classNames(\n        \"\",\n        props.className,\n      )}\n    >\n      {props.children}\n    </button>\n  );\n});\nButton.displayName = \"Button\";"
        }
      ],
      "id": "mOcjh8VT",
      "createdAt": 1659602136952,
      "updatedAt": 1659602244857
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "umEEv1YC",
      "tagsIds": [],
      "description": null,
      "name": "Link forwardRef",
      "content": [
        {
          "label": "Fragment 1",
          "language": "typescript",
          "value": "import classNames from \"classnames\";\nimport { forwardRef } from \"react\";\n\nexport type AnchorProps = React.HTMLProps<HTMLAnchorElement>;\n\nconst CustomLink = forwardRef<HTMLAnchorElement, AnchorProps>((props, ref) => {\n  return (\n    <a\n      ref={ref}\n      {...props}\n      className={classNames(\n        \"\",\n        props.className,\n      )}\n    >\n      {props.children}\n    </a>\n  );\n});\nCustomLink.displayName = \"CustomLink\";\nexport default CustomLink;\n"
        }
      ],
      "id": "bHFzYPfQ",
      "createdAt": 1659602258693,
      "updatedAt": 1659602281697
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "umEEv1YC",
      "tagsIds": [],
      "description": null,
      "name": "Functional component",
      "content": [
        {
          "label": "Fragment 1",
          "language": "typescript",
          "value": "const Component = ({}: {}) => {\n  return <></>;\n};\n\nComponent.displayName = \"Component\";\nexport default Component;\n"
        }
      ],
      "id": "44kUpbAY",
      "createdAt": 1659602306601,
      "updatedAt": 1660230794907
    },
    {
      "isDeleted": true,
      "isFavorites": false,
      "folderId": "umEEv1YC",
      "tagsIds": [],
      "description": null,
      "name": "Untitled snippet",
      "content": [
        {
          "label": "Fragment 1",
          "language": "typescript",
          "value": ""
        }
      ],
      "id": "8_jGAAAi",
      "createdAt": 1659602307964,
      "updatedAt": 1659602310594
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "umEEv1YC",
      "tagsIds": [],
      "description": null,
      "name": "Card component",
      "content": [
        {
          "label": "Fragment 1",
          "language": "typescript",
          "value": "import classNames from \"classnames\";\nimport { forwardRef } from \"react\";\n\ntype DivProps = JSX.IntrinsicAttributes &\n  React.ClassAttributes<HTMLDivElement> &\n  React.InputHTMLAttributes<HTMLDivElement>;\n\nconst Card = forwardRef<HTMLDivElement, DivProps>((props, ref) => {\n  return (\n    <div\n      {...props}\n      className={classNames(\n        \"rounded-md bg-white px-4 py-2 shadow-lg dark:bg-neutral-800\",\n        props.className,\n      )}\n    >\n      {props.children}\n    </div>\n  );\n});\nCard.displayName = \"Card\";\nexport default Card;\n"
        }
      ],
      "id": "edc9GmNc",
      "createdAt": 1659602398449,
      "updatedAt": 1660582295418
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "umEEv1YC",
      "tagsIds": [],
      "description": null,
      "name": "Input forwardRef",
      "content": [
        {
          "label": "Fragment 1",
          "language": "typescript",
          "value": "import classNames from \"classnames\";\nimport React from \"react\";\n\ntype InputProps = JSX.IntrinsicAttributes &\n  React.ClassAttributes<HTMLInputElement> &\n  React.InputHTMLAttributes<HTMLInputElement>;\n\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>((props, ref) => {\n  return (\n    <input\n      ref={ref}\n      {...props}\n      className={classNames(\n        props.className,\n        \"\",\n      )}\n    />\n  );\n});\n\nInput.displayName = \"Input\";\n"
        }
      ],
      "id": "LBKe5Ton",
      "createdAt": 1659602435255,
      "updatedAt": 1659602478719
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "umEEv1YC",
      "tagsIds": [],
      "description": null,
      "name": "Checkbox forwardRef",
      "content": [
        {
          "label": "Fragment 1",
          "language": "typescript",
          "value": "import classNames from \"classnames\";\nimport React from \"react\";\n\ntype InputProps = JSX.IntrinsicAttributes &\n  React.ClassAttributes<HTMLInputElement> &\n  React.InputHTMLAttributes<HTMLInputElement>;\n\nexport const Checkbox = React.forwardRef<HTMLInputElement, InputProps>((props, ref) => {\n  return (\n    <input\n      ref={ref}\n      type=\"checkbox\"\n      {...props}\n      className={classNames(\n        props.className,\n        \"\",\n      )}\n    />\n  );\n});\nCheckbox.displayName = \"Checkbox\";"
        }
      ],
      "id": "xdHyZgqZ",
      "createdAt": 1659602495532,
      "updatedAt": 1659602630059
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "FWpZsdhg",
      "tagsIds": [],
      "description": null,
      "name": "prettier.config.js",
      "content": [
        {
          "label": "Fragment 1",
          "language": "typescript",
          "value": "module.exports = {\n  arrowParens: \"avoid\",\n  tabWidth: 2,\n  printWidth: 100,\n  semi: true,\n  singleQuote: false,\n  trailingComma: \"all\",\n  // plugins: [require(\"prettier-plugin-tailwindcss\")],\n};\n"
        }
      ],
      "id": "WBV4FlzQ",
      "createdAt": 1659602738691,
      "updatedAt": 1659602753314
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "FWpZsdhg",
      "tagsIds": [],
      "description": null,
      "name": ".git-blame-ignore-revs",
      "content": [
        {
          "label": "Fragment 1",
          "language": "gitignore",
          "value": "# git-blame ignored revisions\n# To configure, run\n#   git config blame.ignoreRevsFile .git-blame-ignore-revs\n# Requires Git > 2.23\n# See https://git-scm.com/docs/git-blame#Documentation/git-blame.txt---ignore-revs-fileltfilegt\n\n# commit name - commit hash\na55aef90a8a8d18208252acd4a806ecd7d8b27a3\n"
        }
      ],
      "id": "ntKaEtJN",
      "createdAt": 1659602775777,
      "updatedAt": 1659602944802
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "ZwYF6OPe",
      "tagsIds": [],
      "description": null,
      "name": "tailwind.css",
      "content": [
        {
          "label": "Fragment 1",
          "language": "css",
          "value": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nhtml,\nbody {\n  @apply m-0 h-full p-0 font-sans;\n  scroll-behavior: smooth;\n}\n"
        }
      ],
      "id": "y9UdMy1S",
      "createdAt": 1659602920456,
      "updatedAt": 1659963101234
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "zBxaLtiq",
      "tagsIds": [],
      "description": null,
      "name": "write csv to string",
      "content": [
        {
          "label": "Fragment 1",
          "language": "python",
          "value": "import csv\nimport io\n\ndef csv_to_string(data=[]):\n  \"\"\"Returns data in CSV format\"\"\"\n  output = io.StringIO()\n  writer = csv.writer(output)\n  writer.writerows(data)\n  return output.getvalue()"
        }
      ],
      "id": "IfdkDWyg",
      "createdAt": 1659609765052,
      "updatedAt": 1659609929843
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "zBxaLtiq",
      "tagsIds": [],
      "description": null,
      "name": "django management command",
      "content": [
        {
          "label": "Fragment 1",
          "language": "python",
          "value": "from django.core.management.base import BaseCommand\n\n\nclass Command(BaseCommand):\n    help = \"\"\n\n    def add_arguments(self, parser):\n        parser.add_argument(\n            \"--verbose\",\n            action=\"store_true\",\n            help=\"Enable verbose output\",\n        )\n\n    def handle(self, *args, **options):\n        ...\n"
        }
      ],
      "id": "J-UI4xRQ",
      "createdAt": 1659620260825,
      "updatedAt": 1659620277310
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "zx86Kd_F",
      "tagsIds": [],
      "description": null,
      "name": "read csv",
      "content": [
        {
          "label": "Fragment 1",
          "language": "golang",
          "value": "csvFile, err := os.Open(\"filename.csv\")\nif err != nil {\n  log.Fatal(err)\n}\ndefer csvFile.Close()\n\nreader := csv.NewReader(csvFile)\nrecords, _ := reader.ReadAll()\n"
        }
      ],
      "id": "IuMCti_a",
      "createdAt": 1659872550258,
      "updatedAt": 1659872567993
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "ZwYF6OPe",
      "tagsIds": [],
      "description": null,
      "name": "grid center",
      "content": [
        {
          "label": "Fragment 1",
          "language": "css",
          "value": ".place-center {\n  display: grid;\n  place-content: center;\n}"
        }
      ],
      "id": "c_xBm0w9",
      "createdAt": 1659957237663,
      "updatedAt": 1659957292604
    },
    {
      "isDeleted": true,
      "isFavorites": false,
      "folderId": "ZwYF6OPe",
      "tagsIds": [],
      "description": null,
      "name": "grid center example",
      "content": [
        {
          "label": "Fragment 1",
          "language": "html",
          "value": "<style>\n  .wrapper {\n    display: grid;\n    place-content: center;\n  }\n</style>\n\n<section>\n  <div class=\"box\">hello world</div>\n</section>\n\n"
        }
      ],
      "id": "e1ONnw0Q",
      "createdAt": 1659957352044,
      "updatedAt": 1659957395305
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "ZwYF6OPe",
      "tagsIds": [],
      "description": null,
      "name": "fluid grid",
      "content": [
        {
          "label": "Fragment 1",
          "language": "css",
          "value": ".grid {\n  display: grid;\n  gap: 16px;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n}"
        }
      ],
      "id": "-sdxuwT_",
      "createdAt": 1659957433373,
      "updatedAt": 1659957499590
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "zx86Kd_F",
      "tagsIds": [],
      "description": null,
      "name": "sort slice",
      "content": [
        {
          "label": "Fragment 1",
          "language": "golang",
          "value": "s := []int{1, 2, 3, 4}\nsort.SliceStable(s, func(p, q int) bool {\n\treturn s[p] < s[q]\n})"
        }
      ],
      "id": "zavW1Z-d",
      "createdAt": 1660214168699,
      "updatedAt": 1660214219247
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "mkuuYv1u",
      "tagsIds": [],
      "description": null,
      "name": "random integer",
      "content": [
        {
          "label": "Fragment 1",
          "language": "typescript",
          "value": "const getRandomInt = (max: number) => Math.floor(Math.random() * max)"
        }
      ],
      "id": "OamvARcu",
      "createdAt": 1660310418561,
      "updatedAt": 1660310438759
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "QtIEu6Sp",
      "tagsIds": [],
      "description": null,
      "name": "if elif else",
      "content": [
        {
          "label": "Fragment 1",
          "language": "sh",
          "value": "if [  ]; then\n  \nelif [  ]; then\n  \nelse\n  \nfi"
        }
      ],
      "id": "4sCkKYVL",
      "createdAt": 1660311030023,
      "updatedAt": 1660311050284
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "mkuuYv1u",
      "tagsIds": [],
      "description": null,
      "name": "read from stdin",
      "content": [
        {
          "label": "Fragment 1",
          "language": "typescript",
          "value": "process.stdin.on(\"data\", data => {\n  const string = data.toString();\n  process.exit();\n});\n"
        }
      ],
      "id": "zq9KkwV9",
      "createdAt": 1660477166359,
      "updatedAt": 1660477204579
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "mkuuYv1u",
      "tagsIds": [],
      "description": null,
      "name": "check if file/directory exists",
      "content": [
        {
          "label": "Fragment 1",
          "language": "typescript",
          "value": "import fs from \"fs/promises\";\nimport { constants } from \"fs\";\n\ntry {\n  fs.access(pathToFile, constants.F_OK);\n} catch {\n\n}"
        }
      ],
      "id": "slkWVZAM",
      "createdAt": 1660486509914,
      "updatedAt": 1660486560330
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "zx86Kd_F",
      "tagsIds": [],
      "description": null,
      "name": "read json file",
      "content": [
        {
          "label": "Fragment 1",
          "language": "golang",
          "value": "content, err := ioutil.ReadFile(\"XXX.json\")\nif err != nil {\n\t...\n}\n \nvar payload Data\nerr = json.Unmarshal(content, &payload)\nif err != nil {\n\t...\n}\n "
        }
      ],
      "id": "86LzA9KS",
      "createdAt": 1660569638218,
      "updatedAt": 1660569675916
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "FWpZsdhg",
      "tagsIds": [],
      "description": null,
      "name": "main.tex",
      "content": [
        {
          "label": "Fragment 1",
          "language": "latex",
          "value": "\\documentclass[12pt, a4paper]{article}\n\n\\usepackage{graphicx}\n\\usepackage{setspace}\n\\usepackage{etoolbox}\n\\usepackage{float}\n\n% PARAGRAPHS AS SUBSUBSUBSECTIONS\n% https://tex.stackexchange.com/a/60218\n\\makeatletter\n\\renewcommand\\paragraph{\\@startsection{paragraph}{4}{\\z@}%\n            {-2.5ex\\@plus -1ex \\@minus -.25ex}%\n            {1.25ex \\@plus .25ex}%\n            {\\normalfont\\normalsize\\bfseries}}\n\\makeatother\n\\setcounter{secnumdepth}{4} % how many sectioning levels to assign numbers to\n\\setcounter{tocdepth}{4}    % how many sectioning levels to show in ToC\n\n% TABLES\n\\usepackage{tabularx}\n\\usepackage{booktabs}\n\n% STYLE\n\\usepackage[pdfborder={0 0 0}]{hyperref}\n\\usepackage[margin=1in]{geometry}\n\\usepackage{numprint}\n\n% BIBLIOGRAPHY\n\\usepackage{apacite} % after hyperref\n\n\\title{XXX}\n\\author{XXX}\n\n\\begin{document}\n\n\\section{First section}\n\n\\newpage\n\\bibliographystyle{apacite}\n\\bibliography{references}\n\\end{document}\n"
        }
      ],
      "id": "hYNzLO8t",
      "createdAt": 1660926144080,
      "updatedAt": 1660926309598
    }
  ],
  "tags": [
    {
      "name": "python",
      "id": "QU_nYCkC",
      "createdAt": 1659601715253,
      "updatedAt": 1659601715253
    }
  ]
}